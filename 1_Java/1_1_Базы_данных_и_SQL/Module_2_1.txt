Теория:

1.	https://proselyte.net/tutorials/sql/
2.	https://habr.com/ru/articles/247373/
3.	https://habr.com/post/305926/
4.	https://habr.com/company/oleg-bunin/blog/348172/
5.	https://habr.com/ru/articles/597651/

Практика:
Задание 1. Персоны и адреса
SCHEMA:
CREATE TABLE Person (
  PersonId INT, 
  FirstName VARCHAR(255), 
  LastName VARCHAR(255)
);

CREATE TABLE Address (
  AddressId INT, 
  PersonId INT, 
  City VARCHAR(255), 
  State VARCHAR(255)
);

TRUNCATE TABLE Person;
INSERT INTO Person (PersonId, LastName, FirstName) VALUES (1, 'Wang', 'Allen');

TRUNCATE TABLE Address;
INSERT INTO Address (AddressId, PersonId, City, State) VALUES (1, 2, 'New York City', 'New York');

Задача:
Сформируйте отчёт, который выведет для каждой персоны (Person) её имя, фамилию, город и штат. Если адреса нет, поля City и State должны быть пустыми.
Ожидаемый результат:
FirstName, LastName, City, State

Задание 2. Вторая по величине зарплата
SCHEMA:
Create table If Not Exists Employee (Id int, Salary int)
Truncate table Employee
insert into Employee (Id, Salary) values ('1', '100')
insert into Employee (Id, Salary) values ('2', '200')
insert into Employee (Id, Salary) values ('3', '300')

Задача:
Напишите запрос, который возвращает вторую по величине зарплату (если такой нет — вернуть `null`):
Ожидаемый результат:
+---------------------+
| SecondHighestSalary |
+---------------------+
| 200                 |
+---------------------+

Задание 3. Зарплата выше чем у менеджера
SCHEMA:
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, ManagerId int)
Truncate table Employee
insert into Employee (Id, Name, Salary, ManagerId) values ('1', 'Joe', '70000', '3')
insert into Employee (Id, Name, Salary, ManagerId) values ('2', 'Henry', '80000', '4')
insert into Employee (Id, Name, Salary, ManagerId) values ('3', 'Sam', '60000', 'None')
insert into Employee (Id, Name, Salary, ManagerId) values ('4', 'Max', '90000', 'None')

Задача:
Выведите имена сотрудников, чья зарплата выше, чем у их менеджеров.
+----+-------+--------+-----------+
| Id | Name  | Salary | ManagerId |
+----+-------+--------+-----------+
| 1  | Joe   | 70000  | 3         |
| 2  | Henry | 80000  | 4         |
| 3  | Sam   | 60000  | NULL      |
| 4  | Max   | 90000  | NULL      |
+----+-------+--------+-----------+
Ожидаемый результат:
+----------+
| Employee |
+----------+
| Joe      |
+----------+

Задание 4. Повторяющиеся email
SCHEMA:

Create table If Not Exists Person (Id int, Email varchar(255))
Truncate table Person
insert into Person (Id, Email) values ('1', 'a@b.com')
insert into Person (Id, Email) values ('2', 'c@d.com')
insert into Person (Id, Email) values ('3', 'a@b.com')

Задача:
Напишите SQL-запрос, который вернёт все повторяющиеся email (по крайней мере встречающиеся дважды):
+----+---------+
| Id | Email   |
+----+---------+
| 1  | a@b.com |
| 2  | c@d.com |
| 3  | a@b.com |
+----+---------+

Ожидаемый результат:
+---------+
| Email   |
+---------+
| a@b.com |
+---------+

Задание 5. Клиенты без заказов
SCHEMA:
Create table If Not Exists Customers (Id int, Name varchar(255))
Create table If Not Exists Orders (Id int, CustomerId int)
Truncate table Customers
insert into Customers (Id, Name) values ('1', 'Joe')
insert into Customers (Id, Name) values ('2', 'Henry')
insert into Customers (Id, Name) values ('3', 'Sam')
insert into Customers (Id, Name) values ('4', 'Max')
Truncate table Orders
insert into Orders (Id, CustomerId) values ('1', '3')
insert into Orders (Id, CustomerId) values ('2', '1')

Задача:
Найдите всех клиентов, которые не делали ни одного заказа.

Таблица: Customers.
+----+-------+
| Id | Name  |
+----+-------+
| 1  | Joe   |
| 2  | Henry |
| 3  | Sam   |
| 4  | Max   |
+----+-------+

Таблица: Orders.
+----+------------+
| Id | CustomerId |
+----+------------+
| 1  | 3          |
| 2  | 1          |
+----+------------+

Ожидаемый результат:
+-----------+
| Customers |
+-----------+
| Henry     |
| Max       |
+-----------+

Задание 6. Курсы с большим числом студентов
SCHEMA:

Create table If Not Exists courses (student varchar(255), class varchar(255))
Truncate table courses
insert into courses (student, class) values ('A', 'Math')
insert into courses (student, class) values ('B', 'English')
insert into courses (student, class) values ('C', 'Math')
insert into courses (student, class) values ('D', 'Biology')
insert into courses (student, class) values ('E', 'Math')
insert into courses (student, class) values ('F', 'Computer')
insert into courses (student, class) values ('G', 'Math')
insert into courses (student, class) values ('H', 'Math')
insert into courses (student, class) values ('I', 'Math')

Таблица:
+---------+------------+
| student | class      |
+---------+------------+
| A       | Math       |
| B       | English    |
| C       | Math       |
| D       | Biology    |
| E       | Math       |
| F       | Computer   |
| G       | Math       |
| H       | Math       |
| I       | Math       |
+---------+------------+

Задача:
Выведите все курсы (class), в которых учится пять и более студентов.
Ожидаемый результат:
+---------+
| class   |
+---------+
| Math    |
+---------+


